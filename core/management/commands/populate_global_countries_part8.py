from django.core.management.base import BaseCommand
from core.models import Country


class Command(BaseCommand):
    help = 'Popula pa√≠ses globais com informa√ß√µes de continente e regi√£o (Parte 8/10)'

    def handle(self, *args, **options):
        # PARTE 8: Final do Caribe e mais pa√≠ses da √Åfrica
        countries_data = [
            # Caribe (final)
            {'name': 'Granada', 'name_en': 'Grenada', 'name_es': 'Granada', 'code': 'GD', 'ddi': '+1', 'flag': 'gd', 'continent': 'Am√©rica do Norte', 'region': 'Caribe'},
            {'name': 'Haiti', 'name_en': 'Haiti', 'name_es': 'Hait√≠', 'code': 'HT', 'ddi': '+509', 'flag': 'ht', 'continent': 'Am√©rica do Norte', 'region': 'Caribe'},
            {'name': 'Jamaica', 'name_en': 'Jamaica', 'name_es': 'Jamaica', 'code': 'JM', 'ddi': '+1', 'flag': 'jm', 'continent': 'Am√©rica do Norte', 'region': 'Caribe'},
            {'name': 'Rep√∫blica Dominicana', 'name_en': 'Dominican Republic', 'name_es': 'Rep√∫blica Dominicana', 'code': 'DO', 'ddi': '+1', 'flag': 'do', 'continent': 'Am√©rica do Norte', 'region': 'Caribe'},
            {'name': 'Santa L√∫cia', 'name_en': 'Saint Lucia', 'name_es': 'Santa Luc√≠a', 'code': 'LC', 'ddi': '+1', 'flag': 'lc', 'continent': 'Am√©rica do Norte', 'region': 'Caribe'},
            {'name': 'S√£o Crist√≥v√£o e N√©vis', 'name_en': 'Saint Kitts and Nevis', 'name_es': 'San Crist√≥bal y Nieves', 'code': 'KN', 'ddi': '+1', 'flag': 'kn', 'continent': 'Am√©rica do Norte', 'region': 'Caribe'},
            {'name': 'S√£o Vicente e Granadinas', 'name_en': 'Saint Vincent and the Grenadines', 'name_es': 'San Vicente y las Granadinas', 'code': 'VC', 'ddi': '+1', 'flag': 'vc', 'continent': 'Am√©rica do Norte', 'region': 'Caribe'},
            {'name': 'Trinidad e Tobago', 'name_en': 'Trinidad and Tobago', 'name_es': 'Trinidad y Tobago', 'code': 'TT', 'ddi': '+1', 'flag': 'tt', 'continent': 'Am√©rica do Norte', 'region': 'Caribe'},
            
            # √Åfrica (continua√ß√£o)
            {'name': 'Congo', 'name_en': 'Congo', 'name_es': 'Congo', 'code': 'CG', 'ddi': '+242', 'flag': 'cg', 'continent': '√Åfrica', 'region': '√Åfrica Central'},
            {'name': 'Costa do Marfim', 'name_en': 'Ivory Coast', 'name_es': 'Costa de Marfil', 'code': 'CI', 'ddi': '+225', 'flag': 'ci', 'continent': '√Åfrica', 'region': '√Åfrica Ocidental'},
            {'name': 'Djibouti', 'name_en': 'Djibouti', 'name_es': 'Yibuti', 'code': 'DJ', 'ddi': '+253', 'flag': 'dj', 'continent': '√Åfrica', 'region': '√Åfrica Oriental'},
            {'name': 'Egito', 'name_en': 'Egypt', 'name_es': 'Egipto', 'code': 'EG', 'ddi': '+20', 'flag': 'eg', 'continent': '√Åfrica', 'region': '√Åfrica do Norte'},
            {'name': 'Eritreia', 'name_en': 'Eritrea', 'name_es': 'Eritrea', 'code': 'ER', 'ddi': '+291', 'flag': 'er', 'continent': '√Åfrica', 'region': '√Åfrica Oriental'},
            {'name': 'Eti√≥pia', 'name_en': 'Ethiopia', 'name_es': 'Etiop√≠a', 'code': 'ET', 'ddi': '+251', 'flag': 'et', 'continent': '√Åfrica', 'region': '√Åfrica Oriental'},
            {'name': 'Gab√£o', 'name_en': 'Gabon', 'name_es': 'Gab√≥n', 'code': 'GA', 'ddi': '+241', 'flag': 'ga', 'continent': '√Åfrica', 'region': '√Åfrica Central'},
            {'name': 'G√¢mbia', 'name_en': 'Gambia', 'name_es': 'Gambia', 'code': 'GM', 'ddi': '+220', 'flag': 'gm', 'continent': '√Åfrica', 'region': '√Åfrica Ocidental'},
            {'name': 'Gana', 'name_en': 'Ghana', 'name_es': 'Ghana', 'code': 'GH', 'ddi': '+233', 'flag': 'gh', 'continent': '√Åfrica', 'region': '√Åfrica Ocidental'},
            {'name': 'Guin√©', 'name_en': 'Guinea', 'name_es': 'Guinea', 'code': 'GN', 'ddi': '+224', 'flag': 'gn', 'continent': '√Åfrica', 'region': '√Åfrica Ocidental'},
            {'name': 'Guin√©-Bissau', 'name_en': 'Guinea-Bissau', 'name_es': 'Guinea-Bis√°u', 'code': 'GW', 'ddi': '+245', 'flag': 'gw', 'continent': '√Åfrica', 'region': '√Åfrica Ocidental'},
        ]

        created_count = 0
        updated_count = 0
        
        self.stdout.write('üåç Iniciando popula√ß√£o de pa√≠ses globais (Parte 8/10)...')
        
        for country_data in countries_data:
            try:
                country, created = Country.objects.update_or_create(
                    code=country_data['code'],
                    defaults={
                        'name': country_data['name'],
                        'name_en': country_data['name_en'],
                        'name_es': country_data['name_es'],
                        'ddi': country_data['ddi'],
                        'flag': country_data['flag'],
                        'continent': country_data['continent'],
                        'region': country_data['region'],
                        'is_active': True
                    }
                )
                
                if created:
                    created_count += 1
                    self.stdout.write(f'‚úÖ Pa√≠s criado: {country.name} ({country.continent})')
                else:
                    updated_count += 1
                    self.stdout.write(f'üîÑ Pa√≠s atualizado: {country.name} ({country.continent})')
                    
            except Exception as e:
                self.stdout.write(
                    self.style.ERROR(f'‚ùå Erro ao processar {country_data["name"]}: {str(e)}')
                )

        self.stdout.write('')
        self.stdout.write(
            self.style.SUCCESS(f'üéâ Parte 8 conclu√≠da! Total: {created_count} criados, {updated_count} atualizados')
        )
        self.stdout.write(f'üìä Total de pa√≠ses no sistema: {Country.objects.count()}')
        self.stdout.write('üí° Execute a pr√≥xima parte com: python manage.py populate_global_countries_part9')
